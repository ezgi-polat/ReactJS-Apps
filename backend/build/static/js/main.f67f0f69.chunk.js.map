{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f67f0f69.chunk.js","sourcesContent":["\r\nimport { extendObservable } from \"mobx\";\r\n\r\nclass UserStore{\r\n    constructor(){\r\n        extendObservable(this, {\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n        })\r\n    }\r\n}\r\nexport default new UserStore();","import React from 'react';\r\n\r\n\r\nclass InputField extends React.Component {\r\n  render(){\r\n  return (\r\n    <div className=\"InputField\">\r\n      <input className='input'\r\n      type = {this.props.type} \r\n      placeholder = {this.props.placeholder}\r\n      value =  {this.props.value}\r\n      onChange= {(e) => this.props.onChange(e.target.value) }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default InputField;\r\n","import React from 'react';\r\n\r\n\r\nclass SubmitButton extends React.Component {\r\n  render(){\r\n  return (\r\n    <div className=\"SubmitButton\">\r\n     <button \r\n     className = 'btn'\r\n     disabled={this.props.disabled}\r\n     onClick={() => this.props.onClick() }>{this.props.text}</button>\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default SubmitButton;\r\n\r\n","import React from 'react';\r\nimport UserStore from './stores/UserStore';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n  super(props);\r\n  this.state ={\r\n    username : '',\r\n    password: '',\r\n    buttonDisabled: false\r\n  }\r\n  }\r\n  setInputValue(property,val){\r\n      val=val.trim();\r\n    if(val.length>12){\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n  resetForm(){\r\n    this.setState({\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n\r\n    })\r\n  }\r\n \r\n  async doLogin(){\r\n    if(!this.state.username){\r\n      return;\r\n    }\r\n    if(!this.state.password){\r\n      return;\r\n    }\r\n    this.setState({\r\n      buttonDisabled: true\r\n\r\n    })\r\n\r\n    try{\r\n      let res =await fetch('/login',{\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password:this.state.password\r\n        })\r\n      });\r\n      let result = await res.json();\r\n  if(result && result.success){\r\n\r\n    UserStore.isLoggedIn= true;\r\n    UserStore.username= result.username;\r\n\r\n  }\r\n  else if(result && result.success === false){\r\n    \r\n    this.resetForm();\r\n    alert(result.msg)\r\n  }\r\n    }\r\n    catch(e){\r\n    console.log(e);\r\n    this.resetForm();\r\n    }\r\n\r\n  }\r\n\r\n  render(){\r\n  return (\r\n    <div className=\"LoginForm\">\r\n      Log in \r\n      <InputField \r\n      type ='text'\r\n      placeholder= 'Username' \r\n      value={this.state.username ? this.state.username : ''}\r\n      onChange={ (val) => this.setInputValue('username',val)}\r\n      />\r\n      <InputField \r\n      type ='password'\r\n      placeholder= 'Password' \r\n      value={this.state.password ? this.state.password : ''}\r\n      onChange={ (val) => this.setInputValue('password',val)}\r\n      />\r\n      <SubmitButton \r\n      text='Log in'\r\n      disabled={this.state.buttonDisabled}\r\n      onClick= {() => this.doLogin() }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default LoginForm;\r\n","import React from 'react';\nimport {observer}from 'mobx-react';\nimport UserStore from './stores/UserStore';\nimport LoginForm from './LoginForm';\n//import InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport './App.css';\n\nclass App extends React.Component {\n\nasync componentDidMount()\n{\ntry{\n\n  let res = await fetch('/isLoggedIn',{\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  });\n\n  let result=await res.json()\n  if(result && result.success){\n    UserStore.loading = false;\n    UserStore.isLoggedIn= true;\n    UserStore.username= result.username;\n\n  }\n  else{\n    UserStore.loading = false;\n    UserStore.isLoggedIn= false;\n  }\n}\ncatch(e){\n  UserStore.loading = false;\n  UserStore.isLoggedIn= false;\n\n}\n}\nasync doLogout()\n{\ntry{\n\n  let res = await fetch('/logout',{\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  });\n  \n   let result =await res.json();\n  if(result && result.success){\n\n    UserStore.isLoggedIn= false;\n    UserStore.username= '';\n\n  }\n  \n}\ncatch(e){\n  console.log(e);\n}\n}\n\n  render(){\n    if(UserStore.loading){\n      return(\n        <div className=\"App\">\n        <div className=\"container\">\n        Loading,please wait..\n        </div>\n    </div>\n\n      );\n    }\n    else{\n      if(UserStore.isLoggedIn){\n        return(\n        <div className=\"App\">\n        <div className=\"container\">\n        Welcome {UserStore.username}\n        <SubmitButton\n        text ={'Log out'}\n        disabled={false}\n        onClick={() => this.doLogout()}\n        />\n        </div>\n    </div>\n        );\n      }\n  return (\n    \n    <div className=\"container\">\n    <LoginForm/>\n    <SubmitButton\n        text ={'Log out'}\n        disabled={false}\n        onClick={() => this.doLogout()}\n        />\n    </div>\n    \n  );\n}\n}}\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}